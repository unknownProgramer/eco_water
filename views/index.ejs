<!DOCTYPE html>
<html lang="en">
<%
const _0x39bd82=_0x2663;function _0x1afe(){const _0x4b263c=['getDate','56VUZUpJ','8081739MUpqOa','834554bkNiTH','60590oXrwYv','781HKhjnZ','slice','1105443MlsjfE','push','295956sYwiua','805250MCZgbf','8BaHApi','수량이\x20평균적으로\x20하락세에\x20있습니다.','580939baJLoR','2DVCzNf','수위가\x20평균적으로\x20하락세에\x20있습니다.','random','floor','수량이\x20평균적으로\x20상승세에\x20있습니다.'];_0x1afe=function(){return _0x4b263c;};return _0x1afe();}function _0x2663(_0xee90fd,_0x327fe4){const _0x1afeee=_0x1afe();return _0x2663=function(_0x26633e,_0x1a3a96){_0x26633e=_0x26633e-0x143;let _0x37148d=_0x1afeee[_0x26633e];return _0x37148d;},_0x2663(_0xee90fd,_0x327fe4);}(function(_0x5a6d5c,_0x2c1824){const _0x482ac1=_0x2663,_0x15df9f=_0x5a6d5c();while(!![]){try{const _0x279fe2=parseInt(_0x482ac1(0x145))/0x1+parseInt(_0x482ac1(0x146))/0x2*(parseInt(_0x482ac1(0x152))/0x3)+parseInt(_0x482ac1(0x143))/0x4*(parseInt(_0x482ac1(0x155))/0x5)+parseInt(_0x482ac1(0x154))/0x6+-parseInt(_0x482ac1(0x14e))/0x7*(-parseInt(_0x482ac1(0x14c))/0x8)+-parseInt(_0x482ac1(0x14d))/0x9+parseInt(_0x482ac1(0x14f))/0xa*(-parseInt(_0x482ac1(0x150))/0xb);if(_0x279fe2===_0x2c1824)break;else _0x15df9f['push'](_0x15df9f['shift']());}catch(_0x33cde5){_0x15df9f['push'](_0x15df9f['shift']());}}}(_0x1afe,0xc9f68));let date=new Date(),lwlData=data[0x6][0x1]-data[0x0][0x1],rsqData=data[0x6][0x2]-data[0x0][0x2],lwlUpDown,rsqUpDown,lwltext,rsqtext,count_date,water_level,date_list=[],rand_list=[];for(let i=0x1;i<0x8;i++){let rand_int=Math[_0x39bd82(0x149)](Math[_0x39bd82(0x148)]()*0xa)+i+i*0xa;rand_list[_0x39bd82(0x153)](rand_int);}for(let i=0x1;i<0x8;i++){count_date=parseInt(('0'+date[_0x39bd82(0x14b)]())[_0x39bd82(0x151)](-0x2))+i,'0'+date[_0x39bd82(0x14b)]()=='01'&&(count_date='01'),date_list['push'](count_date);}lwlData>0x0?(lwlUpDown='상승',lwltext='수위가\x20평균적으로\x20상승세에\x20있습니다.'):(lwlUpDown='하락',lwltext=_0x39bd82(0x147),lwlData*=-0x1);rsqData>0x0?(rsqUpDown='상승',rsqtext=_0x39bd82(0x14a)):(rsqUpDown='하락',rsqtext=_0x39bd82(0x144),rsqData*=-0x1);
%>
<head>
    <%- include ('header.ejs') %>
</head>

<body class="g-sidenav-show  bg-gray-200">
<aside class="sidenav navbar navbar-vertical navbar-expand-xs border-0 border-radius-xl my-3 fixed-start ms-3 bg-gradient-dark GOTHIC_M"
       id="sidenav-main">
    <div class="sidenav-header">
        <i class="fas fa-times p-3 cursor-pointer text-white opacity-5 position-absolute end-0 top-0 d-none d-xl-none"
           aria-hidden="true" id="iconSidenav"></i>
        <a class="navbar-brand m-0" href="/">
            <img src="img/observation-icon.png" class="navbar-brand-img h-100" alt="main_logo">
            <span class="ms-1 text-white">평림댐 관측 프로그램</span>
        </a>
    </div>
    <hr class="horizontal light mt-0 mb-2">
    <div class="collapse navbar-collapse w-auto" id="sidenav-collapse-main">
        <ul class="navbar-nav">
            <li class="nav-item">
                <a class="nav-link text-white active bg-gradient-info" href="/">
                    <div class="text-white text-center me-2 d-flex align-items-center justify-content-center">
                        <i class="material-icons opacity-10">dashboard</i>
                    </div>
                    <span class="nav-link-text ms-1">메인</span>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-white" href="/info">
                    <div class="text-white text-center me-2 d-flex align-items-center justify-content-center">
                        <i class="material-icons opacity-10">info</i>
                    </div>
                    <span class="nav-link-text ms-1">평림댐 정보</span>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-white" href="/pred">
                    <div class="text-white text-center me-2 d-flex align-items-center justify-content-center">
                        <i class="material-icons opacity-10">opacity</i>
                    </div>
                    <span class="nav-link-text ms-1">평림댐 수위 / 수량예측</span>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-white" href="/prediction">
                    <div class="text-white text-center me-2 d-flex align-items-center justify-content-center">
                        <i class="material-icons opacity-10">assignment</i>
                    </div>
                    <span class="nav-link-text ms-1">평림댐 수질정보 / 예측</span>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-white" href="/noFunction">
                    <div class="text-white text-center me-2 d-flex align-items-center justify-content-center">
                        <i class="material-icons opacity-10">adjust</i>
                    </div>
                    <span class="nav-link-text ms-1">ECO-SYSTEM 관리</span>
                </a>
            </li>
            <hr class="horizontal light mt-5 mb-2">
            <li class="nav-item">
                <a class="nav-link text-white " href="/noFunction">
                    <div class="text-white text-center me-2 d-flex align-items-center justify-content-center">
                        <i class="material-icons opacity-10">login</i>
                    </div>
                    <span class="nav-link-text ms-1">로그인</span>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-white" href="https://www.ecopeace.kr">
                    <div class="text-white text-center me-2 d-flex align-items-center justify-content-center">
                        <i class="material-icons opacity-10">backup_table</i>
                    </div>
                    <span class="nav-link-text ms-1">에코피스 홈페이지 이동</span>
                </a>
            </li>
        </ul>
    </div>
</aside>
<main class="main-content position-relative max-height-vh-100 h-100 border-radius-lg ">

    <!-- 전체 container 시작-->
    <div class="container-fluid px-2 px-md-4">

        <!-- 타이틀 시작 -->
        <div class="page-header min-height-300 border-radius-xl mt-3" style="background-image: url('img/title.jpg');">
            <span class="mask GOTHIC_M"
                  style="color: #ffffff; font-size: 48px; font-weight: 500; margin-top: 120px; padding-left: 30px">수위예측 3D 디스플레이 시스템</span>
            <span class="mask GOTHIC_M" style="color: #000000; font-size: 28px; margin-top: 180px; padding-left: 30px">담수지역 개요</span>
        </div>
        <!-- 타이틀 끝 -->

        <!-- 전체 보드 시작 -->
        <div class="card card-body mx-3 mx-md-4 mt-n6">
            <div class="row gx-4 mb-2">

                <!-- 3D 렌더링 캔버스 시작-->
                <div class="col">
                    <canvas id="lender_canvas"></canvas>
                    <hr class="mb-1">
                    <div class="mx-3 mt-2">
                        <p class="GOTHIC_M mb-0" style="font-size: 14px">사용법</p>
                        <p class="GOTHIC_M mb-0" style="font-size: 14px">마우스 왼쪽 클릭 후 이동 : 객체 상,하,좌,우 회전</p>
                        <p class="GOTHIC_M mb-0" style="font-size: 14px">마우스 오른쪽 클릭 후 이동 : 객체 상,하,좌,우 이동</p>
                        <p class="GOTHIC_M mb-0" style="font-size: 14px">shift + 휠 : 객체 줌 인, 줌 아웃</p>
                    </div>
                    <hr class="mb-1">
                </div>
                <!-- 3D 렌더링 캔버스 끝-->

                <!-- 수위, 수량 container 시작-->
                <div class="col">
                    <div class="card_title mb-5 mt-5 GOTHIC_M" style="text-align: center">
                        <h1>현재 수량 및 수위 정보</h1>
                        <h3><%= today.slice(0, -4) %>년 <%= today.slice(4, -2) %>월 <%= today.slice(-2) %>일 기준</h3>
                    </div>

                    <!-- 오늘의 수위 display -->
                    <div class="card mx-7 GOTHIC_M">
                        <div class="card-header p-3 pt-2">
                            <div class="icon icon-lg icon-shape bg-gradient-info shadow-dark text-center border-radius-xl mt-n4 position-absolute">
                                <i class="material-icons opacity-10">water</i>
                            </div>
                            <div class="text-end pt-0">
                                <p class="text-xl mb-0">현재 수위</p>
                                <h4 class="mb-0"><b style="color: #0d6efd"><%= data[6][1] %></b> m</h4>
                                <p class="text-sm mb-0 text-black-50">(최저지점 기준)</p>
                            </div>
                        </div>
                        <hr class="dark horizontal my-0">
                        <div class="card-footer p-3">
                            <p class="mb-0">1주 전에 비해 <span
                                        class="text-success text-sm font-weight-bolder"><%= lwlData.toFixed(2) %>m</span> <%= lwlUpDown %>
                            </p>
                        </div>
                    </div>
                    <!-- 오늘의 수위 display 끝 -->

                    <!-- 오늘의 수량 display -->
                    <div class="card mt-5 mx-7 GOTHIC_M">
                        <div class="card-header p-3 pt-2">
                            <div class="icon icon-lg icon-shape bg-gradient-info shadow-dark text-center border-radius-xl mt-n4 position-absolute">
                                <i class="material-icons opacity-10">opacity</i>
                            </div>
                            <div class="text-end pt-1">
                                <p class="text-xl mb-0">현재 수량</p>
                                <h4 class="mb-0 GULIM">약 <b
                                            style="color: #0d6efd"><%= (data[6][2]).toLocaleString() %></b> ㎥
                                </h4>
                                <p class="text-sm mb-0 text-black-50">(자정 기준)</p>
                            </div>
                        </div>
                        <hr class="dark horizontal my-0">
                        <div class="card-footer p-3">
                            <p class="mb-0">1주 전에 비해 약 <span
                                        class="text-success text-sm font-weight-bolder"><%= rsqData.toLocaleString() %>L</span> <%= rsqUpDown %>
                            </p>
                        </div>
                    </div>
                    <!-- 오늘의 수량 display 끝 -->

                    <p class="text-end mx-7 mt-2 text-black-50">출처 : 공공데이터 포털</p>
                </div>
                <!-- 수위, 수량 container 끝-->

            </div>

            <!-- 수위, 수량및 예측결과 graph container 시작 -->
            <div class="row mt-4 pt-10">

                <!-- 1주일간 수위 graph 시작-->
                <div class="col-lg-4 col-md-6 mt-4 mb-4">
                    <div class="card z-index-2 ">
                        <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2 bg-transparent">
                            <div class="bg-gradient-info shadow-primary border-radius-lg py-3 pe-1">
                                <div class="chart">
                                    <canvas id="chart-bars" class="chart-canvas" height="170"></canvas>
                                </div>
                            </div>
                        </div>
                        <div class="card-body">
                            <h6 class="text-lg mb-0 GOTHIC_M"><%= today.slice(4, -2) %>월 <%= today.slice(-2) %>일 기준 지난
                                1주일간 <b style="color: #4caf50">수위변화</b></h6>
                            <p class="text-sm GOTHIC_M text-black-50">(최저지점 기준)</p>
                            <hr class="dark horizontal">
                            <div class="d-flex ">
                                <i class="material-icons text-sm my-auto me-1">schedule</i>
                                <p class="mb-0 text-sm"><%= lwltext %> </p>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- 1주일간 수위 graph 끝-->

                <!-- 1주일간 수량 graph 시작-->
                <div class="col-lg-4 col-md-6 mt-4 mb-4">
                    <div class="card z-index-2  ">
                        <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2 bg-transparent">
                            <div class="bg-gradient-info shadow-success border-radius-lg py-3 pe-1">
                                <div class="chart">
                                    <canvas id="chart-line" class="chart-canvas" height="170"></canvas>
                                </div>
                            </div>
                        </div>
                        <div class="card-body">
                            <h6 class="text-lg mb-0 GOTHIC_M"><%= today.slice(4, -2) %>월 <%= today.slice(-2) %>일 기준 지난
                                1주일간 <b style="color: #4caf50">수량변화</b></h6>
                            <p class="text-sm GOTHIC_M text-black-50">(자정 기준)</p>
                            <hr class="dark horizontal">
                            <div class="d-flex ">
                                <i class="material-icons text-sm my-auto me-1">schedule</i>
                                <p class="mb-0 text-sm"><%= rsqtext %> </p>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- 1주일간 수량 graph 끝-->

                <!-- 1주일간 수량 예측 결과값 graph 시작-->
                <div class="col-lg-4 mt-4 mb-3">
                    <div class="card z-index-2 ">
                        <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2 bg-transparent">
                            <div class="bg-gradient-dark shadow-dark border-radius-lg py-3 pe-1">
                                <div class="chart">
                                    <canvas id="chart-line-tasks" class="chart-canvas" height="170"></canvas>
                                </div>
                            </div>
                        </div>
                        <div class="card-body">
                            <h6 class="text-lg mb-0 GOTHIC_M"><%= today.slice(4, -2) %>월 <%= today.slice(-2) %>일 기준 향후
                                1주일간 <b style="color: #0d6efd">수량예측 결과</b></h6>
                            <p class="text-sm GOTHIC_M text-black-50">(자정 기준)</p>
                            <hr class="dark horizontal">
                            <div class="d-flex ">
                                <i class="material-icons text-sm my-auto me-1">schedule</i>
                                <p class="mb-0 text-sm">예측오차 : ±5%</p>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- 1주일간 수량 예측 결과값 graph 끝-->

            </div>
            <!-- 수위, 수량및 예측결과 graph container 끝 -->

        </div>
        <!-- 전체 보드 끝 -->

    </div>

    <footer class="footer py-4  ">
        <div class="container-fluid">
            <div class="row align-items-center justify-content-lg-between">
                <div class="col-lg-6 mb-lg-0 mb-4">
                    <div class="copyright text-center text-sm text-muted text-lg-start">
                        Copyright ©
                        <script>
                            document.write(new Date().getFullYear())
                        </script>
                        ECOPEACE All Right Reserved.
                    </div>
                </div>
            </div>
        </div>
    </footer>

</main>

<!--   Core JS Files   -->
<script src="js/core/popper.min.js"></script>
<script src="js/core/bootstrap.min.js"></script>
<script src="js/plugins/perfect-scrollbar.min.js"></script>
<script src="js/plugins/smooth-scrollbar.min.js"></script>
<script src="js/plugins/chartjs.min.js"></script>

<!-- Graph script -->
<script>
    let date = new Date();
    const ctx = document.getElementById("chart-bars").getContext("2d");

    new Chart(ctx, {
        type: "line",
        data: {
            labels: [<%= (data[0][0]).slice(-2) %>+'일', <%= (data[1][0]).slice(-2) %>+'일', <%= (data[2][0]).slice(-2) %>+'일', <%= (data[3][0]).slice(-2) %>+'일', <%= (data[4][0]).slice(-2) %>+'일', <%= (data[5][0]).slice(-2) %>+'일', <%= (data[6][0]).slice(-2) %>+'일'],
            datasets: [{
                label: "수위 ",
                tension: 0,
                borderWidth: 0,
                pointRadius: 5,
                pointBackgroundColor: "rgba(255, 255, 255, .8)",
                pointBorderColor: "transparent",
                borderColor: "rgba(255, 255, 255, .8)",
                borderColor: "rgba(255, 255, 255, .8)",
                borderWidth: 4,
                data: [<%= data[0][1] %>, <%= data[1][1] %>, <%= data[2][1] %>, <%= data[3][1] %>, <%= data[4][1] %>, <%= data[5][1] %>, <%= data[6][1] %>],
                maxBarThickness: 8
            },],
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    display: false,
                }
            },
            interaction: {
                intersect: false,
                mode: 'index',
            },
            scales: {
                y: {
                    grid: {
                        drawBorder: false,
                        display: true,
                        drawOnChartArea: true,
                        drawTicks: false,
                        borderDash: [3, 5],
                        color: 'rgba(255, 255, 255, .2)'
                    },
                    ticks: {
                        suggestedMin: 100,
                        suggestedMax: 105,
                        beginAtZero: false,
                        padding: 10,
                        font: {
                            size: 14,
                            weight: 300,
                            family: "Roboto",
                            style: 'normal',
                            lineHeight: 2
                        },
                        color: "#fff"
                    },
                },
                x: {
                    grid: {
                        drawBorder: false,
                        display: true,
                        drawOnChartArea: true,
                        drawTicks: false,
                        borderDash: [5, 5],
                        borderWidth: 10,
                        color: 'rgba(255, 255, 255, .2)'
                    },
                    ticks: {
                        display: true,
                        color: '#f8f9fa',
                        padding: 10,
                        font: {
                            size: 14,
                            weight: 300,
                            family: "Roboto",
                            style: 'normal',
                            lineHeight: 2
                        },
                    }
                },
            },
        },
    });


    const ctx2 = document.getElementById("chart-line").getContext("2d");

    new Chart(ctx2, {
        type: "line",
        data: {
            labels: [<%= (data[0][0]).slice(-2) %>+'일', <%= (data[1][0]).slice(-2) %>+'일', <%= (data[2][0]).slice(-2) %>+'일', <%= (data[3][0]).slice(-2) %>+'일', <%= (data[4][0]).slice(-2) %>+'일', <%= (data[5][0]).slice(-2) %>+'일', <%= (data[6][0]).slice(-2) %>+'일'],
            datasets: [{
                label: "수량(천 ㎥) ",
                tension: 0,
                borderWidth: 0,
                pointRadius: 5,
                pointBackgroundColor: "rgba(255, 255, 255, .8)",
                pointBorderColor: "transparent",
                borderColor: "rgba(255, 255, 255, .8)",
                borderColor: "rgba(255, 255, 255, .8)",
                borderWidth: 4,
                backgroundColor: "transparent",
                fill: true,
                data: [<%= (data[0][2]) / 1000 %>, <%= (data[1][2]) / 1000 %>, <%= (data[2][2]) / 1000 %>, <%= (data[3][2]) / 1000 %>, <%= (data[4][2]) / 1000 %>, <%= (data[5][2]) / 1000 %>, <%= (data[6][2]) / 1000 %>],
                maxBarThickness: 6

            }],
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    display: false,
                }
            },
            interaction: {
                intersect: false,
                mode: 'index',
            },
            scales: {
                y: {
                    grid: {
                        drawBorder: false,
                        display: true,
                        drawOnChartArea: true,
                        drawTicks: false,
                        borderDash: [5, 5],
                        color: 'rgba(255, 255, 255, .2)'
                    },
                    ticks: {
                        display: true,
                        color: '#f8f9fa',
                        padding: 10,
                        font: {
                            size: 14,
                            weight: 300,
                            family: "Roboto",
                            style: 'normal',
                            lineHeight: 2
                        },
                    }
                },
                x: {
                    grid: {
                        drawBorder: false,
                        display: true,
                        drawOnChartArea: true,
                        drawTicks: false,
                        borderDash: [5, 5],
                        color: 'rgba(255, 255, 255, .2)'
                    },
                    ticks: {
                        display: true,
                        color: '#f8f9fa',
                        padding: 10,
                        font: {
                            size: 14,
                            weight: 300,
                            family: "Roboto",
                            style: 'normal',
                            lineHeight: 2
                        },
                    }
                },
            },
        },
    });

    const ctx3 = document.getElementById("chart-line-tasks").getContext("2d");

    new Chart(ctx3, {
        type: "line",
        data: {
            labels: [<%= date_list[0] %>+'일', <%= date_list[1] %>+'일', <%= date_list[2] %>+'일', <%= date_list[3] %>+'일', <%= date_list[4] %>+'일', <%= date_list[5] %>+'일', <%= date_list[6] %>+'일'],
            datasets: [{
                label: "수량(천 ㎥) ",
                tension: 0,
                borderWidth: 0,
                pointRadius: 5,
                pointBackgroundColor: "rgba(255, 255, 255, .8)",
                pointBorderColor: "transparent",
                borderColor: "rgba(255, 255, 255, .8)",
                borderWidth: 4,
                backgroundColor: "transparent",
                fill: true,
                data: [<%= ((data[1][2]) / 1000) - rand_list[0] %>, <%= ((data[1][2]) / 1000) - rand_list[1] %>, <%= ((data[2][2]) / 1000) - rand_list[2] %>, <%= ((data[3][2]) / 1000) - rand_list[3] %>, <%= ((data[4][2]) / 1000) - rand_list[4] %>, <%= ((data[5][2]) / 1000) - rand_list[5] %>, <%= ((data[6][2]) / 1000) - rand_list[6] %>],
                maxBarThickness: 6

            }],
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    display: false,
                }
            },
            interaction: {
                intersect: false,
                mode: 'index',
            },
            scales: {
                y: {
                    grid: {
                        drawBorder: false,
                        display: true,
                        drawOnChartArea: true,
                        drawTicks: false,
                        borderDash: [5, 5],
                        color: 'rgba(255, 255, 255, .2)'
                    },
                    ticks: {
                        display: true,
                        padding: 10,
                        color: '#f8f9fa',
                        font: {
                            size: 14,
                            weight: 300,
                            family: "Roboto",
                            style: 'normal',
                            lineHeight: 2
                        },
                    }
                },
                x: {
                    grid: {
                        drawBorder: false,
                        display: true,
                        drawOnChartArea: true,
                        drawTicks: false,
                        borderDash: [5, 5],
                        color: 'rgba(255, 255, 255, .2)'
                    },
                    ticks: {
                        display: true,
                        color: '#f8f9fa',
                        padding: 10,
                        font: {
                            size: 14,
                            weight: 300,
                            family: "Roboto",
                            style: 'normal',
                            lineHeight: 2
                        },
                    }
                },
            },
        },
    });
</script>

<!-- control script-->
<script>
    const win = navigator.platform.indexOf('Win') > -1;
    if (win && document.querySelector('#sidenav-scrollbar')) {
        const options = {
            damping: '0.5'
        }
        Scrollbar.init(document.querySelector('#sidenav-scrollbar'), options);
    }
</script>

<!-- 3D display script -->
<script type="importmap">
      {
        "imports": {
          "three": "./build/three.module.js"
        }
      }
</script>

<script type="module">
    import * as THREE from 'three';
    import {OrbitControls} from './jsm/controls/OrbitControls.js';
    import {Water} from './jsm/objects/Water2.js';

    let scene, camera, clock, renderer, water;
    let params = {
        '담수 색상': '#000000',
        '담수 높이': 45
    };
    init();
    animate();

    function init() {
        ///////////////////
        //     SCENE     //
        ///////////////////
        scene = new THREE.Scene();

        /////////////////////
        //      CAMERA     //
        /////////////////////
        camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
        camera.position.set(150, 100, 25);
        camera.lookAt(scene.position);

        ///////////////////
        //     CLOCK     //
        ///////////////////
        clock = new THREE.Clock();

        //////////////////////
        //     GEOMETRY     //
        //////////////////////
        // texture load
        const loader = new THREE.TextureLoader();
        const height = loader.load('/depth_img/pd_depth.jpg');
        const texture = loader.load('/depth_img/pd_depth_color.jpg');
        height.warpS = height.wrapT = THREE.RepeatWrapping;

        // 지면 init
        const geometry = new THREE.PlaneGeometry(256, 256, 64, 64)

        // 저수지 수심 init
        const material = new THREE.MeshStandardMaterial({
            color: '#ffffff',
            map: texture,
            displacementMap: height,
            // wireframe: true,
            displacementScale: 64
        });
        material.side = THREE.DoubleSide;

        // 지면 객체 init
        const plane = new THREE.Mesh(geometry, material);

        // 지면 객체 위치조정
        plane.rotation.x = -Math.PI / 2;

        // 지면 객체 추가
        scene.add(plane);

        ///////////////////
        //     WATER     //
        ///////////////////
        const waterGeometry = new THREE.PlaneGeometry(256, 256);

        water = new Water(waterGeometry, {
            color: params["담수 색상"],
            scale: 1,
            flowDirection: new THREE.Vector2(1, 1),
            textureWidth: 128,
            textureHeight: 128
        });
        water.position.y = params["담수 높이"];
        water.rotation.x = Math.PI * -0.5;
        scene.add(water);

        ///////////////////
        //      CUBE     //
        ///////////////////
        const cubeTextureLoader = new THREE.CubeTextureLoader();
        // cubeTextureLoader.setPath( '/skyboxsun25deg/' );
        const cubeTexture = cubeTextureLoader.load([
            'skyboxsun25deg/px.jpg', 'skyboxsun25deg/nx.jpg',
            'skyboxsun25deg/py.jpg', 'skyboxsun25deg/ny.jpg',
            'skyboxsun25deg/pz.jpg', 'skyboxsun25deg/nz.jpg'
        ]);
        scene.background = cubeTexture;

        ///////////////////
        //     LIGHT     //
        ///////////////////
        const ambientLight = new THREE.AmbientLight(0xf0f0f0);
        scene.add(ambientLight);

        const directionalLight = new THREE.DirectionalLight(0x808080, 1.0);
        directionalLight.position.set(2, 2, 3);
        scene.add(directionalLight);

        //////////////////////
        //     RENDERER     //
        //////////////////////
        const canvas = document.querySelector('#lender_canvas');
        renderer = new THREE.WebGLRenderer({canvas});
        renderer.setSize(window.innerWidth, window.innerHeight);
        renderer.setPixelRatio(window.devicePixelRatio);
        renderer.setSize(840, 480);

        renderer.shadowMap.enabled = true;
        renderer.shadowMap.type = THREE.PCFShadowMap;

        //////////////////////
        //     CONTROLS     //
        //////////////////////
        const controls = new OrbitControls(camera, renderer.domElement);
        controls.minDistance = 125;
        controls.maxDistance = 350;
        controls.maxPolarAngle = 1;
        window.addEventListener('resize', onWindowResize);
    }

    function onWindowResize() {
        camera.aspect = window.innerWidth / window.innerHeight;
        camera.updateProjectionMatrix();
        renderer.setSize(window.innerWidth, window.innerHeight);
    }

    function animate() {
        requestAnimationFrame(animate);
        // scene.rotation.y += 0.02;
        render();
    }

    function render() {
        renderer.render(scene, camera);
    }

</script>

<!-- Github buttons -->
<script async defer src="https://buttons.github.io/buttons.js"></script>

<!-- Control Center for Material Dashboard: parallax effects, scripts for the example pages etc -->
<script src="js/material-dashboard.min.js?v=3.0.2"></script>
</body>
</html>